# Workflow 이름
name: gyohwanhaja

# 어떤 이벤트가 발생하면 workflow 실행할 지 명시
on:
  # main 브랜치에 push나 pull request 발생 시
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# 위 이벤트 발생 시 실행될 작업들
jobs:
  build:
    # VM의실행 환경 지정 => 우분투 최신 버전
    runs-on: ubuntu-latest

    # 실행될 jobs를 순서대로 명시
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # JDK 17 설치
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      # Gradle Build를 위한 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

        # Gradle Build (test 제외)
      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test


        # Docker 이미지 빌드
      - name: Build Docker image
        run: docker build --pull --no-cache -t ${{ secrets.DOCKERHUB_USERNAME }}/gyohwanhaja:latest .

        # DockerHub 로그인
      - name: Login to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

        # DockerHub에 앞서 빌드한 이미지를 push
      - name: Push Docker image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/gyohwanhaja:latest

        # EC2 인스턴스로 배포 스크립트 실행
      - name: Deploy to EC2 and run Docker container
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            #현재 실행 중인 컨테이너 확인
            echo "현재 실행 중인 컨테이너:"
            sudo docker ps
            
            # 기존 컨테이너 중지 및 삭제
            sudo docker stop gyohwanhaja || true
            sudo docker rm gyohwanhaja || true

            #중지 및 삭제 확인
            echo "컨테이너 중지 및 삭제 후:"
            sudo docker ps -a
            
            # Docker Hub에서 최신 이미지 pull
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/gyohwanhaja:latest
            
            # 새 컨테이너 실행
            sudo docker run -d --name gyohwanhaja -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/gyohwanhaja:latest
