name: gyohwanhaja

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      
      - name: Build with Gradle
        run: ./gradlew clean build --exclude-task test
      
      # application.yml 작성
      - name: Create application.yml
        run: |
          echo "${{ secrets.APPLICATION }}" > src/main/resources/application.yml
          cat src/main/resources/application.yml
      
      - name: Build Docker image
        run: |
          docker build --pull --no-cache -t ${{ secrets.DOCKERHUB_USERNAME }}/gyohwanhaja:latest .
          docker build --pull --no-cache -t ${{ secrets.DOCKERHUB_USERNAME }}/gyohwanhaja:${{ github.sha }} .
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/gyohwanhaja:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/gyohwanhaja:${{ github.sha }}
      
      - name: Deploy to EC2 and run Docker container
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            set -e
            echo "Deployment started..."
            
            echo "Pulling new Docker image..."
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/gyohwanhaja:latest
            
            echo "Stopping and removing existing container..."
            sudo docker stop gyohwanhaja_app_1 || true
            sudo docker rm gyohwanhaja_app_1 || true
            
            echo "Starting new container..."
            sudo docker run -d --name gyohwanhaja_app_1 -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/gyohwanhaja:latest
            
            echo "Checking container logs..."
            sudo docker logs gyohwanhaja_app_1
            
            echo "Verifying new container is running..."
            if sudo docker ps | grep -q gyohwanhaja_app_1; then
              echo "New container is running successfully."
            else
              echo "Error: New container failed to start."
              exit 1
            fi
            
            echo "Cleaning up old images..."
            sudo docker image prune -a -f --filter "until=24h"
            
            echo "Deployment completed successfully."
